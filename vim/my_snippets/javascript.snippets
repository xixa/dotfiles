snippet pi "ignore prettier"
// prettier-ignore
endsnippet

snippet "t(d|odo)?" "Description" !r
// TODO:
endsnippet

snippet log "console.log shorthand" w
console.log(${1})
endsnippet

snippet "err(o|or)?" "console.err shorthand" !r
console.error(${1})
endsnippet

snippet "imp(o|or|ort)?" "Creates import" !br
import ${2:{${3}}} from '${1}'
endsnippet

snippet doc "creates doc block" b
/**
${VISUAL:/((?m)^)/ * /g}$0
 */
endsnippet

snippet bc "Block comment"
/* ${VISUAL}$0 */
endsnippet

snippet sw "Switch block"
switch (${1}) {
	case ${2}:
		$0
	default:
		break
}
endsnippet

snippet if "Creates an if statement"
if (${1}) {
	$0
} else {

}
endsnippet

snippet try "creates a try"
try {
	${1}
} catch (err) {
	${2:(err) => ${3}}
}
endsnippet

snippet it "creates a test case" b
it('${1:description}', () => {
	expect(${2:...})
})
endsnippet

snippet $ "surrounds a selection in ${}"
${${VISUAL}}
endsnippet

snippet "req(u|ui|uir|uire)?" "automatize commonjs 'import'" br
const ${1} = require("${3}${2:$1}")
endsnippet

snippet req. "automatize commonjs 'import'" b
const $1 = require("./${2:${1/(\w)/\l$1/}}")
endsnippet

snippet fn "Creates a function"
function ${1:identifier}(${2:args}) {
	$0
}
endsnippet

snippet lm "Creates a lambda" w
(${1}) => $0
endsnippet

snippet "arr(n)?" "Creates an array of n elements" !wr
[...Array(${1})]
endsnippet

snippet dev "Shorthand for dev"
process.env.NODE_ENV === 'development' $0
endsnippet

snippet prod "Shorthand for prod"
process.env.NODE_ENV === 'production' $0
endsnippet
