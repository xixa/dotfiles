# Wrappers
snippet do "closes a do block"
do
	$0
end
endsnippet

snippet def "creates a function"
def $1${2:($3)} do
	$0
end
endsnippet

snippet d "creates a do/end"
$1 do
	${VISUAL}
end
endsnippet

snippet % "Wraps highlighted content into map"
%{${VISUAL}$1}
endsnippet

snippet k "creates a field" w
${1:key}: $1, $0
endsnippet

# Rest
snippet mod "declares a module" b
defmodule ${1:<module_name>} do
  $2
end
endsnippet

snippet mdoc "creates a module doc"
@moduledoc """
$1
"""
endsnippet

snippet doc "creates a doc"
@doc """
$1
"""
endsnippet

snippet fn "creates an anonymous function" w
fn ${1:params} -> ${2:.} end$0
endsnippet

snippet ins "creates inspection" w
IO.inspect(${1:label: "${2:ðŸ”¥}"})$0
endsnippet

snippet td "creates TODO"
# TODO: $1
endsnippet

snippet w "atom sigil" b
~w/${VISUAL}$1/a
endsnippet

snippet now "naive datetime" w
NaiveDateTime.utc_now()
endsnippet
