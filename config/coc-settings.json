{
  "coc.preferences.formatOnType": true,
  "coc.preferences.formatOnSaveFiletypes": [
    "cpp",
    "css",
    "html",
    "scss",
    "sass",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "elixir",
    "eelixir",
    "graphql",
    "json",
    "elm",
    "haskell",
    "xml"
  ],
  //"eslint.autoFixOnSave": true,
  //"eslint.run": "onSave",
  "eslint.options": {
    "configFile": ".eslintrc.js"
  },
  "elixir.pathToElixirLS": "~/.vim/plugged/elixir-ls/release/language_server.sh",
  "elixirLS.dialyzerEnabled": true,
  "codeLens.enable": false,
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "c++", "objc", "cuda"],
      "rootPatterns": [".ccls-root", "compile_commands.json"],
      "initializationOptions": {
        "cache": {
          "directory": ".ccls-cache"
        },
        "client": {
          "snippetSupport": true
        },
        "clang": {
          "resourceDir": "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0",
          "extraArgs": [
            "-stdlib=libstdc++",
            "-isystem",
            "/Library/Developer/CommandLineTools/usr/include/c++/v1",
            "-I",
            "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/"
          ]
        }
      }
    },
    "haskell": {
      "command": "hie-wrapper",
      "args": ["--lsp"],
      "filetypes": ["hs", "lhs", "haskell"],
      "rootPatterns": [
        "*.cabal",
        ".stack.yaml",
        "cabal.project",
        "package.yaml"
      ],
      "initializationOptions": {
        "languageServerHaskell": {}
      },
      "settings": {
        "hlintOn": true,
        "maxNumberOfProblems": 10,
        "completionSnippetsOn": true
      }
    },
    "elmLS": {
      "command": "elm-language-server",
      "filetypes": ["elm"],
      "rootPatterns": ["elm.json"],
      "initializationOptions": {
        "elmAnalyseTrigger": "change"
      }
    },
    "purescript": {
      "command": "purescript-language-server",
      "args": ["--stdio", "--config {}"],
      "filetypes": ["purescript"],
      "rootPatterns": ["bower.json", "psc-package.json", "spago.dhall"]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "elixir": ["mix_credo", "mix_credo_compile"]
  }
}
